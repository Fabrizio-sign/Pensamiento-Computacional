import json
import random

# -------------------------------
# Base de datos de películas por género
# -------------------------------
def inicializar_catalogo():
    """Inicializa el catálogo con 7 géneros populares y películas representativas."""
    catalogo = {
        "Acción": {
            "peliculas": [
                "John Wick", "Mad Max: Furia en el Camino", "El Caballero de la Noche", 
                "Misión: Imposible", "The Matrix", "Gladiador", "Vengadores: Endgame"
            ],
            "recomendaciones": [
                "Duro de Matar", "Kill Bill", "El Caso Bourne", "Velocidad", 
                "Terminator 2", "Pantera Negra", "Capitán América: El Soldado del Invierno"
            ]
        },
        "Comedia": {
            "peliculas": [
                "Superbad", "The Hangover", "Hermanos por Peligro", "Damas de Honor",
                "Anchorman", "21 Jump Street", "El Gran Hotel Budapest"
            ],
            "recomendaciones": [
                "Pineapple Express", "Olvidando a Sarah Marshall", "Los Otros Tipos",
                "Noche de Juegos", "Booksmart", "Scott Pilgrim vs the World", "Ted"
            ]
        },
        "Drama": {
            "peliculas": [
                "Sueño de Fuga", "Forrest Gump", "El Padrino",
                "El Club de la Pelea", "Buenos Muchachos", "Pulp Fiction", "La Red Social"
            ],
            "recomendaciones": [
                "El Padrino: Parte II", "Scarface", "Belleza Americana", "Casablanca",
                "Infiltrados", "Pozos de Ambición", "Ciudadano Kane"
            ]
        },
        "Ciencia Ficción": {
            "peliculas": [
                "El Origen", "Interestelar", "Blade Runner 2049", "The Martian",
                "La Llegada", "Distrito 9", "Star Wars: El Imperio Contraataca"
            ],
            "recomendaciones": [
                "Ex Machina", "Looper", "Rompenieves", "Los Hijos del Hombre",
                "El Quinto Elemento", "Dune", "Al Filo del Mañana"
            ]
        },
        "Terror": {
            "peliculas": [
                "El Conjuro", "Hereditary", "El Resplandor", "Get Out",
                "Un Lugar en Silencio", "It", "El Exorcista"
            ],
            "recomendaciones": [
                "Siniestro", "El Babadook", "Insidious", "La Bruja",
                "It Follows", "El Aro", "Actividad Paranormal"
            ]
        },
        "Romance": {
            "peliculas": [
                "El Diario de Noa", "La La Land", "Orgullo y Prejuicio", "Titanic",
                "Antes del Amanecer", "Eterno Resplandor de una Mente sin Recuerdos", "Locos y Ricos"
            ],
            "recomendaciones": [
                "(500) Días Juntos", "El Lado Bueno de las Cosas", "La Propuesta",
                "A Todos los Chicos de los que me Enamoré", "Bajo la Misma Estrella",
                "Llámame por tu Nombre", "Cuestion de Tiempo"
            ]
        },
        "Animación": {
            "peliculas": [
                "Spider-Man: Un Nuevo Universo", "Toy Story", "El Viaje de Chihiro",
                "El Rey León", "Buscando a Nemo", "Shrek", "Coco"
            ],
            "recomendaciones": [
                "Como Entrenar a tu Dragón", "Zootopia", "Kubo y las Dos Cuerdas",
                "Los Increíbles", "Ratatouille", "Moana", "Your Name"
            ]
        }
    }
    return catalogo

# -------------------------------
# Funciones del sistema de recomendación
# -------------------------------
def mostrar_generos_populares(catalogo):
    """Muestra los 7 géneros populares con una película representativa de cada uno."""
    print("\n" + "="*60)
    print("GENEROS POPULARES DE PELICULAS")
    print("="*60)
    
    generos = list(catalogo.keys())
    for i, genero in enumerate(generos, 1):
        pelicula_representativa = catalogo[genero]["peliculas"][0]
        print(f"{i}. {genero:.<20} {pelicula_representativa}")
    
    print("="*60)

def elegir_genero(catalogo):
    """Permite al usuario elegir un género y recomienda una película."""
    generos = list(catalogo.keys())
    
    while True:
        try:
            print(f"\nElige un género (1-{len(generos)}):")
            opcion = int(input("Opcion: "))
            
            if 1 <= opcion <= len(generos):
                genero_elegido = generos[opcion - 1]
                return genero_elegido
            else:
                print(f"Por favor, elige un número entre 1 y {len(generos)}")
                
        except ValueError:
            print("Por favor, ingresa un número válido")

def recomendar_pelicula(catalogo, genero):
    """Recomienda una película del género elegido."""
    peliculas = catalogo[genero]["peliculas"]
    recomendaciones = catalogo[genero]["recomendaciones"]
    
    # Mostrar película representativa
    print(f"\nGenero elegido: {genero}")
    print(f"Pelicula representativa: {peliculas[0]}")
    
    # Recomendar una película diferente
    pelicula_recomendada = random.choice(recomendaciones)
    
    print("\n" + "="*50)
    print(f"TE RECOMENDAMOS: {pelicula_recomendada}")
    print(f"Genero: {genero}")
    print("="*50)
    
    return pelicula_recomendada

def mostrar_peliculas_por_genero(catalogo, genero):
    """Muestra todas las películas disponibles para un género."""
    print(f"\nTodas las películas de {genero}:")
    peliculas = catalogo[genero]["peliculas"]
    recomendaciones = catalogo[genero]["recomendaciones"]
    
    print("\nPeliculas representativas:")
    for i, pelicula in enumerate(peliculas, 1):
        print(f"   {i}. {pelicula}")
    
    print("\nOtras recomendaciones:")
    for i, pelicula in enumerate(recomendaciones, 1):
        print(f"   {i}. {pelicula}")

def obtener_recomendacion_aleatoria(catalogo):
    """Genera una recomendación completamente aleatoria."""
    genero_aleatorio = random.choice(list(catalogo.keys()))
    pelicula_aleatoria = random.choice(catalogo[genero_aleatorio]["recomendaciones"])
    
    print("\n" + "="*40)
    print("RECOMENDACION SORPRESA")
    print(f"Pelicula: {pelicula_aleatoria}")
    print(f"Genero: {genero_aleatorio}")
    print("="*40)

# -------------------------------
# Funciones de estadísticas y análisis
# -------------------------------
def mostrar_estadisticas(catalogo):
    """Muestra estadísticas del catálogo."""
    print("\n" + "="*50)
    print("ESTADISTICAS DEL CATALOGO")
    print("="*50)
    
    total_peliculas = 0
    for genero in catalogo:
        total_peliculas += len(catalogo[genero]["peliculas"]) + len(catalogo[genero]["recomendaciones"])
    
    print(f"Generos disponibles: {len(catalogo)}")
    print(f"Total de películas en el sistema: {total_peliculas}")
    print(f"Peliculas por género:")
    
    for genero in catalogo:
        peliculas_count = len(catalogo[genero]["peliculas"])
        recomendaciones_count = len(catalogo[genero]["recomendaciones"])
        print(f"   - {genero}: {peliculas_count} representativas + {recomendaciones_count} recomendaciones")

def buscar_pelicula(catalogo):
    """Permite buscar una película en el catálogo."""
    termino = input("\nIngresa el nombre de la película a buscar: ").lower().strip()
    
    if not termino:
        print("Debes ingresar un término de búsqueda")
        return
    
    resultados = []
    
    for genero in catalogo:
        # Buscar en películas representativas
        for pelicula in catalogo[genero]["peliculas"]:
            if termino in pelicula.lower():
                resultados.append((pelicula, genero, "Representativa"))
        
        # Buscar en recomendaciones
        for pelicula in catalogo[genero]["recomendaciones"]:
            if termino in pelicula.lower():
                resultados.append((pelicula, genero, "Recomendacion"))
    
    if resultados:
        print(f"\nSe encontraron {len(resultados)} resultado(s):")
        for pelicula, genero, tipo in resultados:
            print(f"   - {pelicula} ({genero}) - {tipo}")
    else:
        print("No se encontraron películas con ese nombre")

# -------------------------------
# Programa principal
# -------------------------------
def main():
    # Inicializar el catálogo
    catalogo = inicializar_catalogo()
    
    print("="*50)
    print("        SISTEMA DE RECOMENDACION DE PELICULAS")
    print("="*50)
    print("Descubre nuevas películas basadas en tus gustos!")
    
    while True:
        print("\n" + "="*50)
        print("MENU PRINCIPAL")
        print("="*50)
        print("1. Ver generos populares y obtener recomendacion")
        print("2. Explorar películas por género")
        print("3. Recomendacion sorpresa")
        print("4. Buscar pelicula")
        print("5. Ver estadisticas del catalogo")
        print("6. Salir")
        
        opcion = input("\nElige una opcion: ").strip()
        
        if opcion == "1":
            # Opción 1: Ver géneros y obtener recomendación
            mostrar_generos_populares(catalogo)
            genero_elegido = elegir_genero(catalogo)
            recomendar_pelicula(catalogo, genero_elegido)
            
            # Preguntar si quiere otra recomendación del mismo género
            while True:
                otra = input("\nQuieres otra recomendacion de este genero? (s/n): ").lower().strip()
                if otra == 's':
                    recomendar_pelicula(catalogo, genero_elegido)
                elif otra == 'n':
                    break
                else:
                    print("Por favor, ingresa 's' para si o 'n' para no")
                    
        elif opcion == "2":
            # Opción 2: Explorar películas por género
            mostrar_generos_populares(catalogo)
            genero_elegido = elegir_genero(catalogo)
            mostrar_peliculas_por_genero(catalogo, genero_elegido)
            
        elif opcion == "3":
            # Opción 3: Recomendación sorpresa
            obtener_recomendacion_aleatoria(catalogo)
            
        elif opcion == "4":
            # Opción 4: Buscar película
            buscar_pelicula(catalogo)
            
        elif opcion == "5":
            # Opción 5: Estadísticas
            mostrar_estadisticas(catalogo)
            
        elif opcion == "6":
            # Opción 6: Salir
            print("\n" + "="*50)
            print("   Gracias por usar el sistema de recomendacion!")
            print("   Hasta la proxima!")
            print("="*50)
            break
            
        else:
            print("Opcion invalida. Por favor, elige una opcion del 1 al 6")

if __name__ == "__main__":
    main()
